<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.lw.dao.UmsUserDao">

    <resultMap type="com.demo.lw.entity.UmsUser" id="UmsUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="loginName" column="login_name" jdbcType="VARCHAR"/>
        <result property="loginPwd" column="login_pwd" jdbcType="VARCHAR"/>
        <result property="actualName" column="actual_name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="collegeId" column="college_id" jdbcType="INTEGER"/>
        <result property="remark" column="remark" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="administratorFlag" column="administrator_flag" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UmsUserMap">
        select
          id, login_name, login_pwd, actual_name, gender, phone, college_id, remark, status, administrator_flag, create_time, update_time
        from ums_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UmsUserMap">
        select
          id, login_name, login_pwd, actual_name, gender, phone, college_id, remark, status, administrator_flag, create_time, update_time
        from ums_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name = #{loginName}
            </if>
            <if test="loginPwd != null and loginPwd != ''">
                and login_pwd = #{loginPwd}
            </if>
            <if test="actualName != null and actualName != ''">
                and actual_name = #{actualName}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="collegeId != null">
                and college_id = #{collegeId}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="administratorFlag != null">
                and administrator_flag = #{administratorFlag}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from ums_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name = #{loginName}
            </if>
            <if test="loginPwd != null and loginPwd != ''">
                and login_pwd = #{loginPwd}
            </if>
            <if test="actualName != null and actualName != ''">
                and actual_name = #{actualName}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="collegeId != null">
                and college_id = #{collegeId}
            </if>
            <if test="remark != null and remark != ''">
                and remark = #{remark}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="administratorFlag != null">
                and administrator_flag = #{administratorFlag}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into ums_user(login_name, login_pwd, actual_name, gender, phone, college_id, remark, status, administrator_flag, create_time, update_time)
        values (#{loginName}, #{loginPwd}, #{actualName}, #{gender}, #{phone}, #{collegeId}, #{remark}, #{status}, #{administratorFlag}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ums_user(login_name, login_pwd, actual_name, gender, phone, college_id, remark, status, administrator_flag, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.loginName}, #{entity.loginPwd}, #{entity.actualName}, #{entity.gender}, #{entity.phone}, #{entity.collegeId}, #{entity.remark}, #{entity.status}, #{entity.administratorFlag}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into ums_user(login_name, login_pwd, actual_name, gender, phone, college_id, remark, status, administrator_flag, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.loginName}, #{entity.loginPwd}, #{entity.actualName}, #{entity.gender}, #{entity.phone}, #{entity.collegeId}, #{entity.remark}, #{entity.status}, #{entity.administratorFlag}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        login_name = values(login_name),
        login_pwd = values(login_pwd),
        actual_name = values(actual_name),
        gender = values(gender),
        phone = values(phone),
        college_id = values(college_id),
        remark = values(remark),
        status = values(status),
        administrator_flag = values(administrator_flag),
        create_time = values(create_time),
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update ums_user
        <set>
            <if test="loginName != null and loginName != ''">
                login_name = #{loginName},
            </if>
            <if test="loginPwd != null and loginPwd != ''">
                login_pwd = #{loginPwd},
            </if>
            <if test="actualName != null and actualName != ''">
                actual_name = #{actualName},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="collegeId != null">
                college_id = #{collegeId},
            </if>
            <if test="remark != null and remark != ''">
                remark = #{remark},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="administratorFlag != null">
                administrator_flag = #{administratorFlag},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from ums_user where id = #{id}
    </delete>

</mapper>

